import streamlit as st
import google.generativeai as genai
from datetime import datetime


genai.configure(api_key="AIzaSyBdWoXhGB8tFMa1zvBwAd9D7NY2_z64sT0")
model = genai.GenerativeModel('models/gemini-1.5-flash')


company_info = {
    "phone": "+7 (495) 123-45-67",
    "—Ç–µ–ª–µ—Ñ–æ–Ω": "+7 (495) 123-45-67",
    "phone number": "+7 (495) 123-45-67",
    "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞": "+7 (495) 123-45-67",
    "contact": "+7 (495) 123-45-67",
    "contacts": "+7 (495) 123-45-67",

    "email": "info@company.com",
    "email address": "info@company.com",
    "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞": "info@company.com",

    "address": "–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥.1",
    "–∞–¥—Ä–µ—Å": "–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥.1",
    "location": "–ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥.1",

    "working hours": "–ü–Ω-–ü—Ç, —Å 9:00 –¥–æ 18:00",
    "—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã": "–ü–Ω-–ü—Ç, —Å 9:00 –¥–æ 18:00",
    "–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã": "–ü–Ω-–ü—Ç, —Å 9:00 –¥–æ 18:00",
    "schedule": "–ü–Ω-–ü—Ç, —Å 9:00 –¥–æ 18:00"
}



def check_company_info(question):
    question_lower = question.lower()
    for keyword, answer in company_info.items():
        if keyword in question_lower:
            return answer
    return None


# --- –ó–∞–ø—Ä–æ—Å –∫ –ò–ò ---
def ask_gemini(question):
    try:
        response = model.generate_content(question)
        return response.text
    except Exception as e:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI: " + str(e)

# --- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ ---
def create_ticket(question):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open("support_tickets.txt", "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] –í–æ–ø—Ä–æ—Å: {question}\n")
    return "–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---
st.title("üí¨ AI-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏")

question = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")

if question:
    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –æ—Ç–≤–µ—Ç –≤ –±–∞–∑–µ
    company_answer = check_company_info(question)

    if company_answer:
        st.info("–û—Ç–≤–µ—Ç –∏–∑ –±–∞–∑—ã FAQ:")
        st.success(company_answer)
    else:
        ai_response = ask_gemini(question)
        st.info("–û—Ç–≤–µ—Ç –ò–ò:")
        st.success(ai_response)

        if "–Ω–µ –∑–Ω–∞—é" in ai_response.lower() or "–Ω–µ —É–≤–µ—Ä–µ–Ω" in ai_response.lower():
            if st.button("–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É"):
                result = create_ticket(question)
                st.warning(result)
